// 1. Load Czech Republic boundary
var czech = ee.FeatureCollection("FAO/GAUL/2015/level0")
  .filter(ee.Filter.eq('ADM0_NAME', 'Czech Republic'));

// 2. Load EUCROPMAP 2018 crop classification, clipped to Czech Republic
var cropMap = ee.ImageCollection('JRC/D5/EUCROPMAP/V1')
  .filterDate('2018-01-01', '2019-01-01')
  .first()
  .select('classification')
  .clip(czech);

// 3. Load 8-day Landsat **EVI** composites for 2018 over Czech Republic
var eviCollection = ee.ImageCollection('LANDSAT/COMPOSITES/C02/T1_L2_8DAY_EVI')
  .filterDate('2018-01-01', '2018-12-31')
  .filterBounds(czech)
  .select('EVI');

// 4. Define crop classes and colors
var cropClasses = {
  'Common wheat': 211,
  'Barley': 213,
  'Sugar Beet': 222,
  'Rape': 232,
  'Maize': 216
};

var cropColors = {
  'Common wheat': 'brown',
  'Barley': 'yellow',
  'Sugar Beet': 'red',
  'Rape': 'purple',
  'Maize': 'green'
};

// 5. Function: Mask EVI image for a specific crop code
function maskCrop(image, cropCode) {
  var mask = cropMap.eq(cropCode);
  return image.updateMask(mask)
              .set('system:time_start', image.get('system:time_start'));
}

// 6. Function: Calculate mean EVI over crop pixels for each image
function calcMeanEVI(collection) {
  return collection.map(function(image) {
    var meanDict = image.reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: czech.geometry(),
      scale: 500,
      maxPixels: 1e13,
      bestEffort: true
    });
    return image.set('mean_EVI', meanDict.get('EVI'));
  }).filter(ee.Filter.notNull(['mean_EVI']));
}

// 7. Loop over each crop, compute EVI time series, export CSV
for (var cropName in cropClasses) {
  var cropCode = cropClasses[cropName];
  
  // Mask EVI collection to crop pixels
  var cropEVIcol = eviCollection.map(function(img) {
    return maskCrop(img, cropCode);
  });
  
  // Calculate mean EVI per image
  var meanEVIcol = calcMeanEVI(cropEVIcol);
  
  // Chart: Add crop name to series label
  var chart = ui.Chart.image.series({
    imageCollection: meanEVIcol,
    region: czech.geometry(),
    reducer: ee.Reducer.mean(),
    scale: 500,
    xProperty: 'system:time_start'
  }).setChartType('LineChart')
    .setOptions({
      title: 'EVI Time Series (2018, Czech Republic)',
      hAxis: {title: 'Date', format: 'MMM-yyyy', gridlines: {count: 12}},
      vAxis: {title: 'Mean EVI', minValue: 0, maxValue: 1},
      lineWidth: 2,
      pointSize: 4,
      series: {
        0: {
          color: cropColors[cropName],
          labelInLegend: cropName  // <== This sets the legend label
        }
      },
      legend: {position: 'right'}
    });
  
  print(chart);
