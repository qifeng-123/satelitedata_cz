// 1. Load Czech Republic boundary
var czech = ee.FeatureCollection("FAO/GAUL/2015/level0")
  .filter(ee.Filter.eq('ADM0_NAME', 'Czech Republic'));

// 2. Load EUCROPMAP 2018 crop classification, clipped to Czech Republic
var cropMap = ee.ImageCollection('JRC/D5/EUCROPMAP/V1')
  .filterDate('2018-01-01', '2019-01-01')
  .first()
  .select('classification')
  .clip(czech);

// 3. Load 8-day Landsat **EVI** composites for 2018 over Czech Republic
var eviCollection = ee.ImageCollection('LANDSAT/COMPOSITES/C02/T1_L2_8DAY_EVI')
  .filterDate('2018-01-01', '2018-12-31')
  .filterBounds(czech)
  .select('EVI');

// 4. Define crop classes and colors
var cropClasses = {
  'Common wheat': 211,
  'Barley': 213,
  'Sugar Beet': 222,
  'Rape': 232,
  'Maize': 216
};

var cropColors = {
  'Common wheat': 'brown',
  'Barley': 'yellow',
  'Sugar Beet': 'red',
  'Rape': 'purple',
  'Maize': 'green'
};

// 5. Function: Mask EVI image for a specific crop code
function maskCrop(image, cropCode) {
  var mask = cropMap.eq(cropCode);
  return image.updateMask(mask)
              .copyProperties(image, ['system:time_start']);
}

// 6. Function: Calculate mean EVI over crop pixels for each image
function calcMeanEVI(collection, cropName) {
  return collection.map(function(image) {
    var meanDict = image.reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: czech.geometry(),
      scale: 500,
      maxPixels: 1e13,
      bestEffort: true
    });
    return ee.Feature(null, {
      'system:time_start': image.get('system:time_start'),
      'mean_EVI': meanDict.get('EVI'),
      'crop': cropName
    });
  }).filter(ee.Filter.notNull(['mean_EVI']));
}

// 7. Loop using Object.keys().forEach()
var allSeries = [];

Object.keys(cropClasses).forEach(function(cropName) {
  var cropCode = cropClasses[cropName];

  // Mask EVI collection to crop pixels
  var cropEVIcol = eviCollection.map(function(img) {
    return maskCrop(img, cropCode);
  });

  // Calculate mean EVI per image, return as FeatureCollection
  var meanFeatures = calcMeanEVI(cropEVIcol, cropName);
  allSeries.push(meanFeatures);
});

// 8. Flatten all features and chart
var allFeatures = ee.FeatureCollection(allSeries).flatten();

var chart = ui.Chart.feature.groups({
  features: allFeatures,
  xProperty: 'system:time_start',
  yProperty: 'mean_EVI',
  seriesProperty: 'crop'
}).setChartType('LineChart')
  .setOptions({
    title: 'EVI Time Series by Crop (2018, Czech Republic)',
    hAxis: {title: 'Date', format: 'MMM-yyyy', gridlines: {count: 12}},
    vAxis: {title: 'Mean EVI', minValue: 0, maxValue: 1},
    lineWidth: 2,
    pointSize: 4,
    legend: {position: 'right'}
  });

print(chart);

