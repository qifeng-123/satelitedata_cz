// 1. Load Czech Republic boundary
var czech = ee.FeatureCollection("FAO/GAUL/2015/level0")
  .filter(ee.Filter.eq('ADM0_NAME', 'Czech Republic'));

// 2. Load EUCROPMAP 2018 crop classification, clipped to Czech Republic
var cropMap = ee.ImageCollection('JRC/D5/EUCROPMAP/V1')
  .filterDate('2018-01-01', '2019-01-01')
  .first()
  .select('classification')
  .clip(czech);

// 3. Load 8-day Landsat NDVI composites for 2018 over Czech Republic
var ndviCollection = ee.ImageCollection('LANDSAT/COMPOSITES/C02/T1_L2_8DAY_NDVI')
  .filterDate('2018-01-01', '2018-12-31')
  .filterBounds(czech)
  .select('NDVI');

// 4. Define crop classes and colors
var cropClasses = {
  'Common wheat': 211,
  'Barley': 213,
  'Sugar Beet': 222,
  'Rape': 232,
  'Maize': 216
};

var cropColors = {
  'Common wheat': 'brown',
  'Barley': 'yellow',
  'Sugar Beet': 'red',
  'Rape': 'purple',
  'Maize': 'green'
};

// 5. Function to mask NDVI image for a crop code
function maskCrop(image, cropCode) {
  var mask = cropMap.eq(cropCode);
  return image.updateMask(mask).set('system:time_start', image.get('system:time_start'));
}

// 6. Function to generate a FeatureCollection for a crop
function getNDVIFeatures(cropCode, cropName) {
  var masked = ndviCollection.map(function(img) {
    return maskCrop(img, cropCode);
  });

  var features = masked.map(function(img) {
    var stat = img.reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: czech.geometry(),
      scale: 500,
      maxPixels: 1e13,
      bestEffort: true
    });
    return ee.Feature(null, {
      'date': img.date().format('YYYY-MM-dd'),
      'NDVI': stat.get('NDVI'),
      'crop': cropName
    });
  });

  return features.filter(ee.Filter.notNull(['NDVI']));
}

// 7. Combine NDVI features for all crops
var allNDVI = [];
for (var name in cropClasses) {
  allNDVI.push(getNDVIFeatures(cropClasses[name], name));
}
var ndviFeatureCollection = ee.FeatureCollection(allNDVI).flatten();

// 8. Create unified NDVI time series chart
var ndviChart = ui.Chart.feature.groups({
  features: ndviFeatureCollection,
  xProperty: 'date',
  yProperty: 'NDVI',
  seriesProperty: 'crop'
})
.setChartType('LineChart')
.setOptions({
  title: 'NDVI Time Series for Multiple Crops (2018, Czech Republic)',
  hAxis: {title: 'Date'},
  vAxis: {title: 'Mean NDVI', minValue: 0, maxValue: 1},
  lineWidth: 2,
  pointSize: 3,
  series: {
    0: {color: cropColors['Common wheat']},
    1: {color: cropColors['Barley']},
    2: {color: cropColors['Sugar Beet']},
    3: {color: cropColors['Rape']},
    4: {color: cropColors['Maize']}
  }
});
print(ndviChart);

// 9. Visualize crop classification map
var cropVisParams = {
  min: 210,
  max: 240,
  palette: ['brown', 'orange', 'yellow', 'red', 'purple', 'green']
};
Map.centerObject(czech, 7);
Map.addLayer(cropMap, cropVisParams, 'Czech Crops 2018');

// 10. Visualize median NDVI for maize
var maizeNDVIcol = ndviCollection.map(function(img) {
  return maskCrop(img, cropClasses['Maize']);
});
var maizeNDVImedian = maizeNDVIcol.median();
Map.addLayer(maizeNDVImedian, {min: 0, max: 1, palette: ['white', 'green']}, 'Median Maize NDVI');

// 11. Export median maize NDVI image
Export.image.toDrive({
  image: maizeNDVImedian,
  description: 'Median_Maize_NDVI_2018_Czech',
  scale: 30,
  region: czech.geometry(),
  maxPixels: 1e13
});

